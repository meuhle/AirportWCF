//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aeroporto
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Utente", Namespace="http://schemas.datacontract.org/2004/07/Aeroporto")]
    public partial class Utente : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CognomeField;
        
        private double CreditoField;
        
        private string MailField;
        
        private System.DateTime NascitaField;
        
        private string NomeField;
        
        private string PassaportoField;
        
        private int TipoField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cognome
        {
            get
            {
                return this.CognomeField;
            }
            set
            {
                this.CognomeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Credito
        {
            get
            {
                return this.CreditoField;
            }
            set
            {
                this.CreditoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mail
        {
            get
            {
                return this.MailField;
            }
            set
            {
                this.MailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Nascita
        {
            get
            {
                return this.NascitaField;
            }
            set
            {
                this.NascitaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome
        {
            get
            {
                return this.NomeField;
            }
            set
            {
                this.NomeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passaporto
        {
            get
            {
                return this.PassaportoField;
            }
            set
            {
                this.PassaportoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Tipo
        {
            get
            {
                return this.TipoField;
            }
            set
            {
                this.TipoField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Biglietti", Namespace="http://schemas.datacontract.org/2004/07/Aeroporto")]
    public partial class Biglietti : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string BuyerField;
        
        private int ClasseField;
        
        private string CodVoloField;
        
        private string PassaportoField;
        
        private double PrezzoField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Buyer
        {
            get
            {
                return this.BuyerField;
            }
            set
            {
                this.BuyerField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Classe
        {
            get
            {
                return this.ClasseField;
            }
            set
            {
                this.ClasseField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodVolo
        {
            get
            {
                return this.CodVoloField;
            }
            set
            {
                this.CodVoloField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passaporto
        {
            get
            {
                return this.PassaportoField;
            }
            set
            {
                this.PassaportoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Prezzo
        {
            get
            {
                return this.PrezzoField;
            }
            set
            {
                this.PrezzoField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Voli", Namespace="http://schemas.datacontract.org/2004/07/Aeroporto")]
    public partial class Voli : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime DataField;
        
        private string Id_voloField;
        
        private double PrezzoField;
        
        private string TrattaField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Data
        {
            get
            {
                return this.DataField;
            }
            set
            {
                this.DataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id_volo
        {
            get
            {
                return this.Id_voloField;
            }
            set
            {
                this.Id_voloField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Prezzo
        {
            get
            {
                return this.PrezzoField;
            }
            set
            {
                this.PrezzoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tratta
        {
            get
            {
                return this.TrattaField;
            }
            set
            {
                this.TrattaField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Aeroporti", Namespace="http://schemas.datacontract.org/2004/07/Aeroporto")]
    public partial class Aeroporti : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CittaField;
        
        private string CodiceField;
        
        private double LatField;
        
        private double LonField;
        
        private string NomeField;
        
        private string StatoField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Citta
        {
            get
            {
                return this.CittaField;
            }
            set
            {
                this.CittaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Codice
        {
            get
            {
                return this.CodiceField;
            }
            set
            {
                this.CodiceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lat
        {
            get
            {
                return this.LatField;
            }
            set
            {
                this.LatField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lon
        {
            get
            {
                return this.LonField;
            }
            set
            {
                this.LonField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome
        {
            get
            {
                return this.NomeField;
            }
            set
            {
                this.NomeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stato
        {
            get
            {
                return this.StatoField;
            }
            set
            {
                this.StatoField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tratte", Namespace="http://schemas.datacontract.org/2004/07/Aeroporto")]
    public partial class Tratte : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DestinazioneField;
        
        private float DistanceField;
        
        private string Id_trattaField;
        
        private string PartenzaField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destinazione
        {
            get
            {
                return this.DestinazioneField;
            }
            set
            {
                this.DestinazioneField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Distance
        {
            get
            {
                return this.DistanceField;
            }
            set
            {
                this.DistanceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id_tratta
        {
            get
            {
                return this.Id_trattaField;
            }
            set
            {
                this.Id_trattaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Partenza
        {
            get
            {
                return this.PartenzaField;
            }
            set
            {
                this.PartenzaField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lavora", Namespace="http://schemas.datacontract.org/2004/07/Aeroporto")]
    public partial class Lavora : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime DataField;
        
        private string PassaportoField;
        
        private string RuoloField;
        
        private string VoloField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Data
        {
            get
            {
                return this.DataField;
            }
            set
            {
                this.DataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passaporto
        {
            get
            {
                return this.PassaportoField;
            }
            set
            {
                this.PassaportoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ruolo
        {
            get
            {
                return this.RuoloField;
            }
            set
            {
                this.RuoloField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Volo
        {
            get
            {
                return this.VoloField;
            }
            set
            {
                this.VoloField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IAirport")]
public interface IAirport
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/Login", ReplyAction="http://tempuri.org/IAirport/LoginResponse")]
    Aeroporto.Utente Login(string mail, string password);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/Login", ReplyAction="http://tempuri.org/IAirport/LoginResponse")]
    System.Threading.Tasks.Task<Aeroporto.Utente> LoginAsync(string mail, string password);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/Register", ReplyAction="http://tempuri.org/IAirport/RegisterResponse")]
    bool Register(Aeroporto.Utente ut, string password);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/Register", ReplyAction="http://tempuri.org/IAirport/RegisterResponse")]
    System.Threading.Tasks.Task<bool> RegisterAsync(Aeroporto.Utente ut, string password);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/Buy", ReplyAction="http://tempuri.org/IAirport/BuyResponse")]
    bool Buy(Aeroporto.Biglietti bi);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/Buy", ReplyAction="http://tempuri.org/IAirport/BuyResponse")]
    System.Threading.Tasks.Task<bool> BuyAsync(Aeroporto.Biglietti bi);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/Ricarica", ReplyAction="http://tempuri.org/IAirport/RicaricaResponse")]
    bool Ricarica(Aeroporto.Utente ut, float credito);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/Ricarica", ReplyAction="http://tempuri.org/IAirport/RicaricaResponse")]
    System.Threading.Tasks.Task<bool> RicaricaAsync(Aeroporto.Utente ut, float credito);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/CheckBiglietti", ReplyAction="http://tempuri.org/IAirport/CheckBigliettiResponse")]
    Aeroporto.Biglietti[] CheckBiglietti(Aeroporto.Utente ut);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/CheckBiglietti", ReplyAction="http://tempuri.org/IAirport/CheckBigliettiResponse")]
    System.Threading.Tasks.Task<Aeroporto.Biglietti[]> CheckBigliettiAsync(Aeroporto.Utente ut);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/VoliBiglietti", ReplyAction="http://tempuri.org/IAirport/VoliBigliettiResponse")]
    Aeroporto.Voli[] VoliBiglietti(Aeroporto.Utente ut);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/VoliBiglietti", ReplyAction="http://tempuri.org/IAirport/VoliBigliettiResponse")]
    System.Threading.Tasks.Task<Aeroporto.Voli[]> VoliBigliettiAsync(Aeroporto.Utente ut);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/VolifromBiglietti", ReplyAction="http://tempuri.org/IAirport/VolifromBigliettiResponse")]
    Aeroporto.Voli[] VolifromBiglietti(Aeroporto.Biglietti bi);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/VolifromBiglietti", ReplyAction="http://tempuri.org/IAirport/VolifromBigliettiResponse")]
    System.Threading.Tasks.Task<Aeroporto.Voli[]> VolifromBigliettiAsync(Aeroporto.Biglietti bi);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/AddAeroporti", ReplyAction="http://tempuri.org/IAirport/AddAeroportiResponse")]
    bool AddAeroporti(Aeroporto.Aeroporti aer);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/AddAeroporti", ReplyAction="http://tempuri.org/IAirport/AddAeroportiResponse")]
    System.Threading.Tasks.Task<bool> AddAeroportiAsync(Aeroporto.Aeroporti aer);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/AddVolo", ReplyAction="http://tempuri.org/IAirport/AddVoloResponse")]
    bool AddVolo(Aeroporto.Voli vo);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/AddVolo", ReplyAction="http://tempuri.org/IAirport/AddVoloResponse")]
    System.Threading.Tasks.Task<bool> AddVoloAsync(Aeroporto.Voli vo);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/AddTratta", ReplyAction="http://tempuri.org/IAirport/AddTrattaResponse")]
    bool AddTratta(Aeroporto.Tratte tra);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/AddTratta", ReplyAction="http://tempuri.org/IAirport/AddTrattaResponse")]
    System.Threading.Tasks.Task<bool> AddTrattaAsync(Aeroporto.Tratte tra);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/AddLavoro", ReplyAction="http://tempuri.org/IAirport/AddLavoroResponse")]
    bool AddLavoro(Aeroporto.Lavora la);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/AddLavoro", ReplyAction="http://tempuri.org/IAirport/AddLavoroResponse")]
    System.Threading.Tasks.Task<bool> AddLavoroAsync(Aeroporto.Lavora la);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/CheckRuolo", ReplyAction="http://tempuri.org/IAirport/CheckRuoloResponse")]
    Aeroporto.Lavora[] CheckRuolo(Aeroporto.Utente ut);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/CheckRuolo", ReplyAction="http://tempuri.org/IAirport/CheckRuoloResponse")]
    System.Threading.Tasks.Task<Aeroporto.Lavora[]> CheckRuoloAsync(Aeroporto.Utente ut);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/CheckRuoloforVolo", ReplyAction="http://tempuri.org/IAirport/CheckRuoloforVoloResponse")]
    Aeroporto.Lavora[] CheckRuoloforVolo(Aeroporto.Utente ut, Aeroporto.Voli vo);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/CheckRuoloforVolo", ReplyAction="http://tempuri.org/IAirport/CheckRuoloforVoloResponse")]
    System.Threading.Tasks.Task<Aeroporto.Lavora[]> CheckRuoloforVoloAsync(Aeroporto.Utente ut, Aeroporto.Voli vo);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/CheckBigliettiFilter", ReplyAction="http://tempuri.org/IAirport/CheckBigliettiFilterResponse")]
    Aeroporto.Biglietti[] CheckBigliettiFilter(Aeroporto.Utente ut, System.DateTime date, bool forward);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/CheckBigliettiFilter", ReplyAction="http://tempuri.org/IAirport/CheckBigliettiFilterResponse")]
    System.Threading.Tasks.Task<Aeroporto.Biglietti[]> CheckBigliettiFilterAsync(Aeroporto.Utente ut, System.DateTime date, bool forward);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/Ricerca", ReplyAction="http://tempuri.org/IAirport/RicercaResponse")]
    Aeroporto.Voli[] Ricerca(Aeroporto.Aeroporti a1, Aeroporto.Aeroporti a2, System.DateTime date);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/Ricerca", ReplyAction="http://tempuri.org/IAirport/RicercaResponse")]
    System.Threading.Tasks.Task<Aeroporto.Voli[]> RicercaAsync(Aeroporto.Aeroporti a1, Aeroporto.Aeroporti a2, System.DateTime date);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/BestPrice", ReplyAction="http://tempuri.org/IAirport/BestPriceResponse")]
    Aeroporto.Voli[] BestPrice(Aeroporto.Aeroporti a1, Aeroporto.Aeroporti a2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/BestPrice", ReplyAction="http://tempuri.org/IAirport/BestPriceResponse")]
    System.Threading.Tasks.Task<Aeroporto.Voli[]> BestPriceAsync(Aeroporto.Aeroporti a1, Aeroporto.Aeroporti a2);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/Misentofortutato", ReplyAction="http://tempuri.org/IAirport/MisentofortutatoResponse")]
    Aeroporto.Voli[] Misentofortutato(Aeroporto.Aeroporti a1, System.DateTime date);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/Misentofortutato", ReplyAction="http://tempuri.org/IAirport/MisentofortutatoResponse")]
    System.Threading.Tasks.Task<Aeroporto.Voli[]> MisentofortutatoAsync(Aeroporto.Aeroporti a1, System.DateTime date);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/MisentofortutatoNoData", ReplyAction="http://tempuri.org/IAirport/MisentofortutatoNoDataResponse")]
    Aeroporto.Voli[] MisentofortutatoNoData(Aeroporto.Aeroporti a1);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/MisentofortutatoNoData", ReplyAction="http://tempuri.org/IAirport/MisentofortutatoNoDataResponse")]
    System.Threading.Tasks.Task<Aeroporto.Voli[]> MisentofortutatoNoDataAsync(Aeroporto.Aeroporti a1);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/CheckLavoro", ReplyAction="http://tempuri.org/IAirport/CheckLavoroResponse")]
    Aeroporto.Lavora[] CheckLavoro(Aeroporto.Utente ut);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirport/CheckLavoro", ReplyAction="http://tempuri.org/IAirport/CheckLavoroResponse")]
    System.Threading.Tasks.Task<Aeroporto.Lavora[]> CheckLavoroAsync(Aeroporto.Utente ut);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IAirportChannel : IAirport, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class AirportClient : System.ServiceModel.ClientBase<IAirport>, IAirport
{
    
    public AirportClient()
    {
    }
    
    public AirportClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public AirportClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public AirportClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public AirportClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public Aeroporto.Utente Login(string mail, string password)
    {
        return base.Channel.Login(mail, password);
    }
    
    public System.Threading.Tasks.Task<Aeroporto.Utente> LoginAsync(string mail, string password)
    {
        return base.Channel.LoginAsync(mail, password);
    }
    
    public bool Register(Aeroporto.Utente ut, string password)
    {
        return base.Channel.Register(ut, password);
    }
    
    public System.Threading.Tasks.Task<bool> RegisterAsync(Aeroporto.Utente ut, string password)
    {
        return base.Channel.RegisterAsync(ut, password);
    }
    
    public bool Buy(Aeroporto.Biglietti bi)
    {
        return base.Channel.Buy(bi);
    }
    
    public System.Threading.Tasks.Task<bool> BuyAsync(Aeroporto.Biglietti bi)
    {
        return base.Channel.BuyAsync(bi);
    }
    
    public bool Ricarica(Aeroporto.Utente ut, float credito)
    {
        return base.Channel.Ricarica(ut, credito);
    }
    
    public System.Threading.Tasks.Task<bool> RicaricaAsync(Aeroporto.Utente ut, float credito)
    {
        return base.Channel.RicaricaAsync(ut, credito);
    }
    
    public Aeroporto.Biglietti[] CheckBiglietti(Aeroporto.Utente ut)
    {
        return base.Channel.CheckBiglietti(ut);
    }
    
    public System.Threading.Tasks.Task<Aeroporto.Biglietti[]> CheckBigliettiAsync(Aeroporto.Utente ut)
    {
        return base.Channel.CheckBigliettiAsync(ut);
    }
    
    public Aeroporto.Voli[] VoliBiglietti(Aeroporto.Utente ut)
    {
        return base.Channel.VoliBiglietti(ut);
    }
    
    public System.Threading.Tasks.Task<Aeroporto.Voli[]> VoliBigliettiAsync(Aeroporto.Utente ut)
    {
        return base.Channel.VoliBigliettiAsync(ut);
    }
    
    public Aeroporto.Voli[] VolifromBiglietti(Aeroporto.Biglietti bi)
    {
        return base.Channel.VolifromBiglietti(bi);
    }
    
    public System.Threading.Tasks.Task<Aeroporto.Voli[]> VolifromBigliettiAsync(Aeroporto.Biglietti bi)
    {
        return base.Channel.VolifromBigliettiAsync(bi);
    }
    
    public bool AddAeroporti(Aeroporto.Aeroporti aer)
    {
        return base.Channel.AddAeroporti(aer);
    }
    
    public System.Threading.Tasks.Task<bool> AddAeroportiAsync(Aeroporto.Aeroporti aer)
    {
        return base.Channel.AddAeroportiAsync(aer);
    }
    
    public bool AddVolo(Aeroporto.Voli vo)
    {
        return base.Channel.AddVolo(vo);
    }
    
    public System.Threading.Tasks.Task<bool> AddVoloAsync(Aeroporto.Voli vo)
    {
        return base.Channel.AddVoloAsync(vo);
    }
    
    public bool AddTratta(Aeroporto.Tratte tra)
    {
        return base.Channel.AddTratta(tra);
    }
    
    public System.Threading.Tasks.Task<bool> AddTrattaAsync(Aeroporto.Tratte tra)
    {
        return base.Channel.AddTrattaAsync(tra);
    }
    
    public bool AddLavoro(Aeroporto.Lavora la)
    {
        return base.Channel.AddLavoro(la);
    }
    
    public System.Threading.Tasks.Task<bool> AddLavoroAsync(Aeroporto.Lavora la)
    {
        return base.Channel.AddLavoroAsync(la);
    }
    
    public Aeroporto.Lavora[] CheckRuolo(Aeroporto.Utente ut)
    {
        return base.Channel.CheckRuolo(ut);
    }
    
    public System.Threading.Tasks.Task<Aeroporto.Lavora[]> CheckRuoloAsync(Aeroporto.Utente ut)
    {
        return base.Channel.CheckRuoloAsync(ut);
    }
    
    public Aeroporto.Lavora[] CheckRuoloforVolo(Aeroporto.Utente ut, Aeroporto.Voli vo)
    {
        return base.Channel.CheckRuoloforVolo(ut, vo);
    }
    
    public System.Threading.Tasks.Task<Aeroporto.Lavora[]> CheckRuoloforVoloAsync(Aeroporto.Utente ut, Aeroporto.Voli vo)
    {
        return base.Channel.CheckRuoloforVoloAsync(ut, vo);
    }
    
    public Aeroporto.Biglietti[] CheckBigliettiFilter(Aeroporto.Utente ut, System.DateTime date, bool forward)
    {
        return base.Channel.CheckBigliettiFilter(ut, date, forward);
    }
    
    public System.Threading.Tasks.Task<Aeroporto.Biglietti[]> CheckBigliettiFilterAsync(Aeroporto.Utente ut, System.DateTime date, bool forward)
    {
        return base.Channel.CheckBigliettiFilterAsync(ut, date, forward);
    }
    
    public Aeroporto.Voli[] Ricerca(Aeroporto.Aeroporti a1, Aeroporto.Aeroporti a2, System.DateTime date)
    {
        return base.Channel.Ricerca(a1, a2, date);
    }
    
    public System.Threading.Tasks.Task<Aeroporto.Voli[]> RicercaAsync(Aeroporto.Aeroporti a1, Aeroporto.Aeroporti a2, System.DateTime date)
    {
        return base.Channel.RicercaAsync(a1, a2, date);
    }
    
    public Aeroporto.Voli[] BestPrice(Aeroporto.Aeroporti a1, Aeroporto.Aeroporti a2)
    {
        return base.Channel.BestPrice(a1, a2);
    }
    
    public System.Threading.Tasks.Task<Aeroporto.Voli[]> BestPriceAsync(Aeroporto.Aeroporti a1, Aeroporto.Aeroporti a2)
    {
        return base.Channel.BestPriceAsync(a1, a2);
    }
    
    public Aeroporto.Voli[] Misentofortutato(Aeroporto.Aeroporti a1, System.DateTime date)
    {
        return base.Channel.Misentofortutato(a1, date);
    }
    
    public System.Threading.Tasks.Task<Aeroporto.Voli[]> MisentofortutatoAsync(Aeroporto.Aeroporti a1, System.DateTime date)
    {
        return base.Channel.MisentofortutatoAsync(a1, date);
    }
    
    public Aeroporto.Voli[] MisentofortutatoNoData(Aeroporto.Aeroporti a1)
    {
        return base.Channel.MisentofortutatoNoData(a1);
    }
    
    public System.Threading.Tasks.Task<Aeroporto.Voli[]> MisentofortutatoNoDataAsync(Aeroporto.Aeroporti a1)
    {
        return base.Channel.MisentofortutatoNoDataAsync(a1);
    }
    
    public Aeroporto.Lavora[] CheckLavoro(Aeroporto.Utente ut)
    {
        return base.Channel.CheckLavoro(ut);
    }
    
    public System.Threading.Tasks.Task<Aeroporto.Lavora[]> CheckLavoroAsync(Aeroporto.Utente ut)
    {
        return base.Channel.CheckLavoroAsync(ut);
    }
}
